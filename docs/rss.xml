<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Deer</title><link>https://deerwan.github.io</link><description>分享生活的点滴</description><copyright>Deer</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/70961031?v=4</url><title>avatar</title><link>https://deerwan.github.io</link></image><lastBuildDate>Wed, 16 Apr 2025 01:38:45 +0000</lastBuildDate><managingEditor>Deer</managingEditor><ttl>60</ttl><webMaster>Deer</webMaster><item><title>小雅emby全家桶+家庭影院服务器</title><link>https://deerwan.github.io/post/xiao-ya-emby-quan-jia-tong-%2B-jia-ting-ying-yuan-fu-wu-qi.html</link><description>
视频教程

https://www.bilibili.com/video/BV1vK421x7eM/?spm_id_from=333.999.0.0

安装常用软件

```
apt install -y curl wget sudo bash
```

debian默认不能root用户直接登录，我们需要修改下

```
sudo nano /etc/ssh/sshd_config
```

找到并用#注释掉这行

```
PermitRootLogin prohibit-password
```

新建一行 添加

```
PermitRootLogin yes
```

重启服务

```
sudo service ssh restart
```

一键更新（先更新一下）

```
apt update -y &amp;&amp; apt full-upgrade -y &amp;&amp; apt autoremove -y &amp;&amp; apt autoclean -y
```

挂载U盘

查看挂载情况

```
df -h
```

Debian 开机自动挂载磁盘

查看磁盘所有UUID

```
sudo blkid
```

编辑/etc/fstab文件, 在文件尾部添加需要挂载磁盘的UUID 并添加一些信息例如 ↓

```
UUID=******* /home/h1/ ext4 defaults 0 2
```


UUID是磁盘的信息标签, /home/h1是挂载的文件夹, txt4是磁盘格式, defaults 默认.
第一个数字：0表示开机不检查磁盘，1表示开机检查磁盘；
第二个数字：0表示交换分区，1代表启动分区（Linux），2表示普通分区

安装docker

这里用脚本吧，选择一种方式
一键脚本（工具箱}

```markdown
curl -sS -O https://kejilion.pro/kejilion.sh &amp;&amp; chmod +x kejilion.sh &amp;&amp; ./kejilion.sh
```


docker一键脚本

```markdown
bash &lt;(curl -sSL https://linuxmirrors.cn/docker.sh)
```


安装小雅
官网地址： https://github.com/DDS-Derek/xiaoya-alist

```markdown
bash -c '$(curl -sLk https://ddsrem.com/xiaoya_install.sh)'
```


需要两个token和一个id
短token：https://alist.nn.ci/zh/guide/drivers/aliyundrive.html
长token：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html
文件夹id：https://www.alipan.com/
阿里云盘的资源盘建立一个文件夹，然后填入地址栏中的id

推荐使用host模式

web界面
http://自己的ip地址:5678/
这里是正常的 等的几分钟刷新一下

emby全家桶

1. 安装需要的条件：

1.1. 正确安装小雅Docker版，并可以正常使用。</description><guid isPermaLink="true">https://deerwan.github.io/post/xiao-ya-emby-quan-jia-tong-%2B-jia-ting-ying-yuan-fu-wu-qi.html</guid><pubDate>Wed, 16 Apr 2025 01:38:22 +0000</pubDate></item><item><title>无界新手教程</title><link>https://deerwan.github.io/post/wu-jie-xin-shou-jiao-cheng.html</link><description>
## **特殊说明**

无界的上手难度不算低，大家尽力而为，有问题**带着截图**去群里问。</description><guid isPermaLink="true">https://deerwan.github.io/post/wu-jie-xin-shou-jiao-cheng.html</guid><pubDate>Wed, 16 Apr 2025 01:37:34 +0000</pubDate></item><item><title>玩客云Armbian版本区别</title><link>https://deerwan.github.io/post/wan-ke-yun-Armbian-ban-ben-qu-bie.html</link><description>
**bookworm_current**和**bullseye_current**和**jammy_current**的区别

以**hzyitc**大佬的仓库为标准
大佬仓库地址:**https://github.com/hzyitc/armbian-onecloud**

Bookworm 和 Bullseye 都是 Debian 发行版，前者是 Debian 12，后者是 Debian 11，主要区别在于版本的更新程度和支持时间。</description><guid isPermaLink="true">https://deerwan.github.io/post/wan-ke-yun-Armbian-ban-ben-qu-bie.html</guid><pubDate>Wed, 16 Apr 2025 01:36:40 +0000</pubDate></item><item><title>玩客云Armbian(CasaOS)使用指南</title><link>https://deerwan.github.io/post/wan-ke-yun-Armbian%28CasaOS%29-shi-yong-zhi-nan.html</link><description>
### **一键换源**

系统源

```
bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)
```

```


```

Docker源

```
bash &lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/DockerInstallation.sh)
```

## 

### **玩客云**CasaOS商店专属源

```
●
```

**arm/armv7/armhf** (玩客云 等)

```
https://play.cuse.eu.org/Cp0204-AppStore-Play-arm.zip
```

### **修改LED灯颜色 0为关闭, 1为开启**

配置即时生效：例【蓝色】

```
echo 0 &gt; /sys/class/leds/onecloud:red:alive/brightness
echo 1 &gt; /sys/class/leds/onecloud:blue:alive/brightness
echo 0 &gt; /sys/class/leds/onecloud:green:alive/brightness
```

配置永久生效：例【蓝色】

```
nano /sys/class/leds/onecloud:blue:alive/brightness
1
nano /sys/class/leds/onecloud:red:alive/brightness
0
nano /sys/class/leds/onecloud:green:alive/brightness
0
```

## **进阶**

## **OneCloud 设备 LED 控制程序**

#### **项目地址：**[Lance-He/OneCloud-LED (github.com)](https://github.com/Lance-He/OneCloud-LED?tab=readme-ov-file#onecloud-设备-led-控制程序)

本项目为 玩客云OneCloud 设备提供一个自制的 LED 控制程序，基于 hzyitc 大佬的 Armbian 镜像开发，兼容大部分 Debian 系列发行版。</description><guid isPermaLink="true">https://deerwan.github.io/post/wan-ke-yun-Armbian%28CasaOS%29-shi-yong-zhi-nan.html</guid><pubDate>Wed, 16 Apr 2025 01:35:51 +0000</pubDate></item><item><title>群晖安装Agent被控端</title><link>https://deerwan.github.io/post/qun-hui-an-zhuang-Agent-bei-kong-duan.html</link><description>
先手动下载nezha-agent程序

我们打开这个链接：https://github.com/nezhahq/agent/releases ，找到和我们系统对应的安装程序。</description><guid isPermaLink="true">https://deerwan.github.io/post/qun-hui-an-zhuang-Agent-bei-kong-duan.html</guid><pubDate>Wed, 16 Apr 2025 01:34:57 +0000</pubDate></item><item><title>更改Docker容器时区</title><link>https://deerwan.github.io/post/geng-gai-Docker-rong-qi-shi-qu.html</link><description>
### 问题：容器时间与北京时间相差8个小时

### 原因：宿主机设置了时区，而Docker容器并没有设置，导致两者相差8小时

CST应该是指（China Shanghai Time，东八区时间）
UTC应该是指（Coordinated Universal Time，标准时间）
所以，这2个时间实际上应该相差8个小时

所以，必须统一两者的时区

解决方案：正在运行的容器，可以宿主机直接执行命令给某个容器同步时间

#### #方法1  直接在宿主机操作

```markdown
docker cp /etc/localtime 【容器ID或者NAME】:/etc/localtime
docker cp -L /usr/share/zoneinfo/Asia/Shanghai 【容器ID或者NAME】:/etc/localtime
```

#### #方法2  登录容器同步时区timezone，一般是因为时区不同导致时间差

```markdown
ln -sf /usr/share/zoneinfo/Asia/Singapore /etc/localtime
```

在完成后，再通过date命令进行查看当前时间

#### PS

如果出现
“Error response from daemon: Could not find the file /usr/share/zoneinfo/Asia in container 【容器ID或者NAME】”
则说明在名为 “【容器ID或者NAME】” 的容器内部，找不到 “/usr/share/zoneinfo/Asia” 这个文件或目录。</description><guid isPermaLink="true">https://deerwan.github.io/post/geng-gai-Docker-rong-qi-shi-qu.html</guid><pubDate>Wed, 16 Apr 2025 01:34:06 +0000</pubDate></item><item><title>UptimeRobot-网站监控</title><link>https://deerwan.github.io/post/UptimeRobot--wang-zhan-jian-kong.html</link><description>
# 如何部署 Site Status 网站可用性监测页面

### 简介

**Site-Status 是一个基于 UptimeRobot API 的开源站点在线状态监测面板。</description><guid isPermaLink="true">https://deerwan.github.io/post/UptimeRobot--wang-zhan-jian-kong.html</guid><pubDate>Wed, 16 Apr 2025 01:32:32 +0000</pubDate></item><item><title>飞牛OS切换ROOT用户</title><link>https://deerwan.github.io/post/fei-niu-OS-qie-huan-ROOT-yong-hu.html</link><description>
首先去web后台打开ssh功能

![](https://blog.106996.xyz/HEXO/fnos/Snipaste_2024-10-26_10-55-09.png)

用你熟悉的ssh软件登录

首先输入

```
sudo passwd root  #给root用户创建密码，第一行为登录密码，第二三行是你要创建的root密码
```

显示 psddword updated successfully 表示设置成功

接着用编辑配置文件

输入

```
sudo nano /etc/ssh/sshd_config
```

将no 改为yes，ctrl＋o写入，ctrl加x保存，ctrl+y回车退出

![](https://blog.106996.xyz/HEXO/fnos/Snipaste_2024-10-26_10-56-32.png)

重启ssh服务使其生效

```
sudo service sshd restart
```
。</description><guid isPermaLink="true">https://deerwan.github.io/post/fei-niu-OS-qie-huan-ROOT-yong-hu.html</guid><pubDate>Wed, 16 Apr 2025 01:31:10 +0000</pubDate></item><item><title>BNCR-XYBOTV2</title><link>https://deerwan.github.io/post/BNCR-XYBOTV2.html</link><description>
### 安装命令

#### amd

```
docker run -dit \
 -p 9000:9000 \
 --restart=on-failure:3 \
 --name XYBotV2 \
 --log-opt max-size=5m \
 -v /root/XYBotV2:/app \
xmoxmo/xybotv2
```

#### arm

```
docker run -dit \
 -p 9000:9000 \
 --restart=on-failure:3 \
 --name XYBotV2 \
 --log-opt max-size=5m \
 -v /root/XYBotV2:/app \
xmoxmo/xybotv2:arm
```

### 查看日志并登录微信

```
docker logs -f XYBotV2
```

### 修改配置文件

```
nano /root/XYBotV2/plugins/all_in_one_config.toml 
```

![](https://img.106996.xyz/file/Snipaste_2025-03-08_21-16-26.png)

#### 修改完配置文件需要重启使配置生效

```
docker restart XYBotV2
```

### 无界端配置

![](https://img.106996.xyz/file/Snipaste_2025-03-08_21-28-46.png)

### 设置管理员

```
set XYBotV2 admin xxxxxxx
```

&lt;!-- ##{'timestamp':1741392623}## --&gt;。</description><guid isPermaLink="true">https://deerwan.github.io/post/BNCR-XYBOTV2.html</guid><pubDate>Tue, 15 Apr 2025 23:46:02 +0000</pubDate></item></channel></rss>